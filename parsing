- gensim and sklearn are common Python libraries that handle syntax parsing.
- Parsing: an NLP process concerned with segmenting text based on syntax

  - Part-of-speech tagging (POS tagging) identifies parts of speech (verbs, nouns, adjectives, etc.).
  - Named entity recognition (NER) helps identify the proper nouns (e.g., “Natalia” or “Berlin”) in a text. 
  - Dependency grammar trees help you understand the relationship between the words in a sentence.

  - Code example (this prints out trees of text)
    import spacy
    from nltk import Tree
    from squids import squids_text

    dependency_parser = spacy.load('en')

    parsed_squids = dependency_parser(squids_text)

    my_sentence = "My name is Margaret"
    my_parsed_sentence = dependency_parser(my_sentence)

    def to_nltk_tree(node):
      if node.n_lefts + node.n_rights > 0:
        parsed_child_nodes = [to_nltk_tree(child) for child in node.children]
        return Tree(node.orth_, parsed_child_nodes)
      else:
        return node.orth_

    for sent in parsed_squids.sents:
      to_nltk_tree(sent.root).pretty_print()
      
    for sent in my_parsed_sentence.sents:
    to_nltk_tree(sent.root).pretty_print()